import { HttpStatus } from '@nestjs/common';

export const userMessagesConfig: { [messageCode: string]: any } = {
    'user:create:error': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to create a new user, please try again',
        userMessage  : 'Unable to create a new user, please try again',
    },
    'user:create:missingInformation': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to create a new user with missing information.',
        userMessage  : 'Unable to create a new user with missing information.',
    },
    'user:create:missingFirstName': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to create a new user without first name.',
        userMessage  : 'Unable to create a new user without first name.',
    },
    'user:create:missingLastName': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to create a new user without last name.',
        userMessage  : 'Unable to create a new user without last name.',
    },
    'user:create:missingEmail': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to create a new user without email.',
        userMessage  : 'Unable to create a new user without email.',
    },
    'user:create:missingPassword': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to create a new user without password.',
        userMessage  : 'Unable to create a new user without password.',
    },
    'user:create:emailAlreadyExist': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'A user with that email address has already exist.',
        userMessage  : 'A user with that email address has already exist.',
    },
    'user:show:missingId': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to find the user caused by missing information.',
        userMessage  : 'Unable to find the user caused by missing information.',
    },
    'user:update:missingInformation': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to update the user caused by missing information.',
        userMessage  : 'Unable to update the user caused by missing information.',
    },
    'user:update:missingId': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to update the user caused by missing information.',
        userMessage  : 'Unable to update the user caused by missing information.',
    },
    'user:delete:missingId': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to delete the user caused by missing information.',
        userMessage  : 'Unable to delete the user caused by missing information.',
    },
    'user:notFound': {
        type         : 'notFound',
        status       : false,
        httpStatus   : HttpStatus.NOT_FOUND,
        errorMessage : 'The e-mail address or password you entered was incorrect.',
        userMessage  : 'The e-mail address or password you entered was incorrect.',
    },
    'request:unauthorized': {
        type         : 'unauthorized',
        status       : false,
        httpStatus   : HttpStatus.UNAUTHORIZED,
        errorMessage : 'Access unauthorized.',
        userMessage  : 'Access unauthorized.',
    },
    'request:incorrectAccessToken': {
        type         : 'unauthorized',
        status       : false,
        httpStatus   : HttpStatus.UNAUTHORIZED,
        errorMessage : 'Access token is invalid.',
        userMessage  : 'Access token is invalid.',
    },
    'auth:login:missingEmail': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to connect the user without email.',
        userMessage  : 'Unable to connect the user without email.',
    },
    'auth:login:missingPassword': {
        type         : 'BadRequest',
        status       : false,
        httpStatus   : HttpStatus.BAD_REQUEST,
        errorMessage : 'Unable to connect the user without password.',
        userMessage  : 'Unable to connect the user without password.',
    }
};
